name: Build & Push Images
on:
  push:
    - main
    - dev
    - dev/*
  schedule:
    # build a new set of images daily at 00:30hrs UTC so that we quickly
    # get updates from upstream images.
    - cron: '30 0 * * *'
env:
  IMAGE: ghcr.io/${{ github.repository_owner }}/postgres
  BASE_IMAGE: public.ecr.aws/docker/library/postgres
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - distro: alpine
            version: "11-alpine"

          - distro: alpine
            version: "12-alpine"

          - distro: alpine
            version: "13-alpine"

          - distro: alpine
            version: "14-alpine"

          - distro: alpine
            version: "15-alpine"

          - distro: debian
            version: "11-bullseye"

          - distro: debian
            version: "12"

          - distro: debian
            version: "13"

          - distro: debian
            version: "14"

          - distro: debian
            version: "15"

          - distro: debian
            version: latest
    steps:
      - uses: actions/checkout@v2

      # build locally first before the multiarch build with buildx
      - name: Build image
        run: docker build --rm -f ${{ matrix.distro }}.Dockerfile
               --build-arg base_image=${{ env.BASE_IMAGE }}:${{ matrix.version }}
               --tag ${{ env.IMAGE }}:${{ matrix.version }}
               .

      - name: Test alpine image
        env:
          IMAGE: ${{ env.IMAGE }}:${{ matrix.version }}
        run: docker-compose -f docker-compose.test.yml run sut

      # if we get here, the test passed, so let's buildx and push
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ matrix.distro }}.Dockerfile
          build-args: base_image=${{ env.BASE_IMAGE }}:${{ matrix.version }}
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v6
          push: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
          tags: ${{ env.IMAGE }}:${{ matrix.version }}

      - name: Inspect image
        run: docker buildx imagetools inspect ${{ env.IMAGE }}:${{ matrix.version }}
